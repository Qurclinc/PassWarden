from PyQt5.QtWidgets import QMainWindow, QHBoxLayout, QLabel, QLineEdit, QPushButton, QScrollArea, QWidget, QVBoxLayout
from PyQt5.QtCore import Qt
from src.Manager import Ui_ManagerWindow
from Services.User import User

class ManagerWindow(QMainWindow):
    def __init__(self, stacked_widget, db, set_user, get_user):
        super(ManagerWindow, self).__init__()
        self.ui = Ui_ManagerWindow()
        self.ui.setupUi(self)
        self.stacked_widget = stacked_widget

        self.scroll_content_widget = QWidget()
        self.scroll_layout = QVBoxLayout(self.scroll_content_widget)  # –õ–µ–π–∞—É—Ç –¥–ª—è –æ–±–ª–∞—Å—Ç–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–∏–¥–∂–µ—Ç —Å –ª–µ–π–∞—É—Ç–æ–º –≤ passArea
        self.ui.passArea.setWidget(self.scroll_content_widget)
        self.scroll_layout.setAlignment(Qt.AlignTop)

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤–Ω–µ—à. –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π: –ø–æ–¥—Ç—è–≥–∏–≤–∞–µ—Ç—Å—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ç–æ—á–∫–∏ –∑–∞–ø—É—Å–∫–∞, –≥–ª–∞–≤–Ω–∞—è –∏ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è, –∞ —Ç–∞–∫–∂–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        self.db = db
        self.set_user = set_user
        self.get_user = get_user
        self.user = User() # –ø—É—Å—Ç–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —Ç–∞–∫ –Ω–∞–¥–æ.
        self.ui.logout_btn.clicked.connect(self.logout)
        self.ui.add_password_btn.clicked.connect(self.add_password)
        self.password_list = []
        self.row_count = len(self.user.get_passwords_list(self.db))
        self.print_list()

    def clear_password_list(self):
        '''–û—á–∏—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–∞—Ä–æ–ª–µ–π –≤ scroll_layout'''
        for i in reversed(range(self.scroll_layout.count())):  # –û—á–∏—Å—Ç–∫–∞
            item = self.scroll_layout.itemAt(i)
            if item.widget():
                item.widget().deleteLater()

    def logout(self):
        '''–í—ã—Ö–æ–¥ –∏–∑ —É—á—ë—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏'''
        self.set_user(None)
        # self.init_user()
        self.ui.password_line.setText("")
        self.ui.service_line.setText("")
        self.clear_password_list()
        self.stacked_widget.setCurrentIndex(0)


    def print_list(self): #TODO: –¢—è–∂–∫–æ. –ù—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –ø–æ–ª–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å–µ—Ä–≤–∏—Å + –ø–∞—Ä–æ–ª—å —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –¢—è–∂–∫–æ –±—É–¥–µ—Ç ui –∫—Ä–∞—Å–∏–≤–æ —Å–¥–µ–ª–∞—Ç—å...
        self.clear_password_list()
        self.password_list = self.user.get_passwords_list(self.db)
        for line in self.password_list:
            service = line[2]
            password = self.user.get_password(self.db, service)

            row_layout = QHBoxLayout()

            service_label = QLabel(service)
            row_layout.addWidget(service_label)

            password_field = QLineEdit()
            password_field.setEchoMode(QLineEdit.Password)
            password_field.setText(password)
            password_field.setReadOnly(True)
            row_layout.addWidget(password_field)

            show_password_btn = QPushButton("üëÅ")
            show_password_btn.clicked.connect(lambda _, p=password_field: self.toggle_password_display(p))
            row_layout.addWidget(show_password_btn)

            # self.ui.verticalLayout.addLayout(row_layout)
            self.scroll_layout.addLayout(row_layout)


    def toggle_password_display(self, password_field):
        '''–§—É–Ω–∫—Ü–∏—è, –ø–µ—Ä–µ–∫–ª—é—á–∞—é—â–∞—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–∞—Ä–æ–æ–ª—è –ø–æ –Ω–∞–∂–∞—Ç–∏—é'''
        if password_field.echoMode() == QLineEdit.Password:
            password_field.setEchoMode(QLineEdit.Normal)
        else:
            password_field.setEchoMode(QLineEdit.Password)


    def add_password(self):
        '''–î–æ–±–∞–≤–ª—è–µ—Ç –ø–∞—Ä–æ–ª—å –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏–∑ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞'''
        print("list:", self.user.get_passwords_list(self.db))
        self.row_count = len(self.user.get_passwords_list(self.db))
        self.db.add_password(self.user.get_id(), self.ui.service_line.text(), self.ui.password_line.text())
        print(self.row_count)
        self.ui.password_line.setText("")
        self.ui.service_line.setText("")
        self.print_list()


    def init_user(self):
        self.user = self.get_user()